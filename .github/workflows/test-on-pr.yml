name: Run Tests on Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/workflows/**'

env:
  JAVA_VERSION: '17'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: |
        cd starbucks-menu
        mvn clean test -Dspring.profiles.active=test

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: 'starbucks-menu/target/surefire-reports/*.xml'
        reporter: java-junit
        fail-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: starbucks-menu/target/surefire-reports/

    - name: Comment test results on PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Try to read test results
          let testSummary = '## üß™ Test Results\n\n';
          
          try {
            const testReportPath = 'starbucks-menu/target/surefire-reports';
            if (fs.existsSync(testReportPath)) {
              const files = fs.readdirSync(testReportPath);
              const xmlFiles = files.filter(f => f.endsWith('.xml'));
              
              testSummary += `- **Total test files**: ${xmlFiles.length}\n`;
              testSummary += `- **Status**: Tests completed\n`;
              testSummary += `- **Profile**: test\n\n`;
              testSummary += '‚úÖ All tests have been executed. Check the "Checks" tab for detailed results.\n\n';
              testSummary += '**Next steps:**\n';
              testSummary += '- Review any failing tests\n';
              testSummary += '- Ensure all new code has appropriate test coverage\n';
              testSummary += '- Consider adding integration tests for new features\n';
            } else {
              testSummary += '‚ö†Ô∏è Test reports not found. Tests may not have run properly.\n';
            }
          } catch (error) {
            testSummary += `‚ùå Error reading test results: ${error.message}\n`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: testSummary
          });